/*
htdetect horizontal transfert detection tools
Copyright (C) 2011  Laurent Modolo

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "mThread.hpp"

template <typename T>
mThread<T>::mThread(int number) : mThread_waiting(number*2)
{
	for(int i = 0; i < number; i++)
	{
		mThread_running.push_back(mThreadRunning<T>(&mThread_waiting));
	}
}

template <typename T>
mThread<T>::~mThread()
{
	for(int i = 0; i < mThread_running.size(); i++)
	{
		mThread_running.at(i).join();
	}
}

template <typename T>
void mThread<T>::add(T x)
{
	mThread_waiting.add(x);
}

template <typename T>
void mThread<T>::stop()
{
	mThreadRunning<T>::set_stop();
}
